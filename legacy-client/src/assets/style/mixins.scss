
@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}

@mixin boxShadow($val){
	-moz-box-shadow: $val;
	-webkit-box-shadow: $val;
	box-shadow: $val;
}

@mixin borderRadius($val) {
	-moz-border-radius: $val;
	-webkit-border-radius: $val;
	border-radius: $val;
}

@mixin boxSizing{
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

@mixin flex-display($display: flex) {
	display: "-webkit-${display}";
	display: "-ms-${display}box"; // IE10 uses -ms-flexbox
	display: "-ms-${display}"; // IE11
	display: $display;
}

@mixin flex($columns: initial) {
  -webkit-flex: $columns;
      -ms-flex: $columns;
          flex: $columns;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction: row) {
	-webkit-flex-direction: $direction;
		-ms-flex-direction: $direction;
			flex-direction: $direction;
  }

  // Flex Line.ts Wrapping
  // - applies to: flex containers
  // nowrap | wrap | wrap-reverse
  @mixin flex-wrap($wrap: nowrap) {
	-webkit-flex-wrap: $wrap;
		-ms-flex-wrap: $wrap;
			flex-wrap: $wrap;
  }

  // Flex Direction and Wrap
  // - applies to: flex containers
  // <flex-direction> || <flex-wrap>
  @mixin flex-flow($flow) {
	-webkit-flex-flow: $flow;
		-ms-flex-flow: $flow;
			flex-flow: $flow;
  }

  // Display Order
  // - applies to: flex items
  // <integer>
  @mixin flex-order($order: 0) {
	-webkit-order: $order;
		-ms-order: $order;
			order: $order;
  }

  // Flex grow factor
  // - applies to: flex items
  // <number>
  @mixin flex-grow($grow: 0) {
	-webkit-flex-grow: $grow;
		-ms-flex-grow: $grow;
			flex-grow: $grow;
  }

  // Flex shrink
  // - applies to: flex item shrink factor
  // <number>
  @mixin flex-shrink($shrink: 1) {
	-webkit-flex-shrink: $shrink;
		-ms-flex-shrink: $shrink;
			flex-shrink: $shrink;
  }

  // Flex basis
  // - the initial main size of the flex item
  // - applies to: flex itemsnitial main size of the flex item
  // <width>
  @mixin flex-basis($width: auto) {
	-webkit-flex-basis: $width;
		-ms-flex-basis: $width;
			flex-basis: $width;
  }

  // Axis Alignment
  // - applies to: flex containers
  // flex-start | flex-end | center | space-between | space-around
  @mixin justify-content($justify: flex-start) {
	-webkit-justify-content: $justify;
		-ms-justify-content: $justify;
			justify-content: $justify;
  }

  // Packing Flex Lines
  // - applies to: multi-line flex containers
  // flex-start | flex-end | center | space-between | space-around | stretch
  @mixin align-content($align: stretch) {
	-webkit-align-content: $align;
		-ms-align-content: $align;
			align-content: $align;
  }

  // Cross-axis Alignment
  // - applies to: flex containers
  // flex-start | flex-end | center | baseline | stretch
  @mixin align-items($align: stretch) {
	-webkit-align-items: $align;
		-ms-align-items: $align;
			align-items: $align;
  }

  // Cross-axis Alignment
  // - applies to: flex items
  // auto | flex-start | flex-end | center | baseline | stretch
  @mixin align-self($align: auto) {
	-webkit-align-self: $align;
		-ms-align-self: $align;
			align-self: $align;
  }
